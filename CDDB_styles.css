/*Color palette*/
:root{ 
  --cddbRed: #af1a17;
  --cddbGreen: #10a020;
  --cddbBlue: #2d58a8;
  --cddbBlack: #0e0e0e;
  --cddbWhite: white;
  --cddbGrey: #939393;
}

/*This is a global, some add padding and margin where you don't call for it and this will 
ensure things defined here are not applied automatically.*/
* {
	font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
	box-sizing: border-box;
	padding: 0;
	margin: 0;
}
/*I hate the halo but it is bad for accessibility to remove it. Return it once more grown up and have a better solution*/
button:focus { outline: none; }
/*Grid display used to place the 6 main items (called cells) dealt with on each argument's page view*/
.main_grid {
	width: 100vw;
	height: 100vh;
	display: grid;
	grid-template-columns: 66.66% 33.34%;
	grid-template-rows: 25% 50% 25%;
}
.head_cell {
	grid-column-start: 2;
	grid-column-end: 3;
	grid-row-start: 1;
	grid-row-end: 2;
	display: flex;
	height: 100%;
	width: 100%;
	display: flex;
	flex-direction: column;
	height: 100%;
	width: 100%;
}
.argument_cell {
	grid-column-start: 1;
	grid-column-end: 2;
	grid-row-start: 2;
	grid-row-end: 3;
	display: flex;
	flex-direction: column;
	height: 100%;
	width: 100%;
}
.because_cell {
	grid-column-start: 1;
	grid-column-end: 2;
	grid-row-start: 1;
	grid-row-end: 2;
	display: flex;
	flex-direction: column;
	height: 100%;
	width: 100%;
}
.therefore_cell {
	grid-column-start: 1;
	grid-column-end: 2;
	grid-row-start: 3;
	grid-row-end: 4;
	display: flex;
	flex-direction: column;
	height: 100%;
	width: 100%;
}
.rebuttal_cell {
	grid-column-start: 2;
	grid-column-end: 3;
	grid-row-start: 2;
	grid-row-end: 3;
	display: flex;
	flex-direction: column;
	height: 100%;
	width: 100%;
}
.filter_cell {
	grid-column-start: 2;
	grid-column-end: 3;
	grid-row-start: 3;
	grid-row-end: 4;
	display: flex;
	flex-direction: column;
	height: 100%;
	width: 100%;
}

/* main components of each cell's box*/
.box_header {
	display: flex;
	justify-content: space-between; /* This is so I can put buttons on the right side of headers */
	font-size: 120%;
	font-weight: bolder;
	padding: 1rem; 
	border-width: 0;  
}
.box_content {
	display: block;
	height: 100%;
	padding: .5rem; 
	overflow: auto;
	border-right-width: 8px;
	border-right-style: solid;
	border-left-width: 8px;
	border-left-style: solid;
}
.box_footer {
	display: flex;
	justify-content: space-evenly;
	font-size: 120%;
	padding: 1rem; 
	border-width: 0; 
}
.box_nofoot {
	height: 0%;
	border-bottom-style: solid;
	border-bottom-width: 8px;
}
.box_logo {
	font-family: Brush Script MT;
	display: flex;
	height: 100%;
	padding-top: auto; 
	padding-bottom: auto;
	padding-right: auto;
	padding-left: 1.5rem;
	border-width: 0; 	
}
/* Might not need - assumes I need a div to have my flex box container send this to the far right */
.box_action {

}
.button{
      float: left;
      margin:0;
      height: 2rem;
      font-size: 75%;
      font-weight: bold;
      text-align: center;
      vertical-align: center;
      border-width: .2rem;
      border-style: solid;
      border-radius: 2rem;
}
.choiceHold {
	width:20%; 
	min-width:160px;
}
.choice button {
    cursor: pointer; /* Pointer/hand icon */
    float: left; /* Float the buttons side by side */
}
.choice button:not(:last-child) {
    border-right: none; /* Prevent double borders */
}
/* Clear floats (clearfix hack) */
.choice:after {
    clear: both;
    display: table;
}
.acceptOpen{
	padding-left: .5rem;
	padding-right: .5rem;
	color: var(--cddbWhite);
	background-color: var(--cddbGrey);
	border-color: var(--cddbWhite);
	border-right-width: .1rem;
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
}
.acceptOpen:hover {
	background-color: var(--cddbGreen);
}
.acceptSet{
	padding-left: .5rem;
	padding-right: .5rem;
	color: var(--cddbWhite);
	background-color: var(--cddbGreen);
	border-color: var(--cddbWhite);
	border-right-width: .1rem;
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
}
.rejectOpen{
	padding-left: .5rem;
	padding-right: .5rem;
	color: var(--cddbWhite);
	background-color: var(--cddbGrey);
	border-color: var(--cddbWhite);
	border-left-width: .1rem;
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;      
} 
.rejectOpen:hover {
	background-color: var(--cddbRed);
}
.rejectSet{
	padding-left: .5rem;
	padding-right: .5rem;
	color: var(--cddbWhite);
	background-color: var(--cddbRed);
	border-color: var(--cddbWhite);
	border-left-width: .1rem;
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;         
}
.weighBecause{
	display: none;
	font-weight: strong;
	padding-left: .5rem;
	padding-right: .5rem;
	color: var(--cddbWhite);
	background-color: var(--cddbBlue);
	border-color: var(--cddbWhite);
	border-radius: 0;
}
#becauseAddAssertion{
	display: none;
}
.weighBecause:hover {
	background-color: var(--cddbWhite);
	color: var(--cddbBlue);
}
.weighTherefore{
	padding-left: .5rem;
	padding-right: .5rem;
	color: var(--cddbWhite);
	background-color: var(--cddbGreen);
	border-color: var(--cddbWhite);
	border-radius: 0;
}
.weighTherefore:hover {
	background-color: var(--cddbWhite);
	color: var(--cddbGreen);
}
.weighRebuttal{
	padding-left: .5rem;
	padding-right: .5rem;
	color: var(--cddbWhite);
	background-color: var(--cddbRed);
	border-color: var(--cddbWhite);
	border-radius: 0;
}
.weighRebuttal:hover {
	background-color: var(--cddbWhite);
	color: var(--cddbRed);
}
.lineItem{
	padding: .1rem;
	display: flex;
    align-items: center;
    border: 0;		
}
.assocArgContainer:hover{
	background-color: var(--cddbBlue);
	/*padding-left: -2rem;*/
	border-radius: 5px;
	/*margin-left: -1rem; THIS DIDN"T WORK BECAUSE IT COVERS THE BUTTON MAKING IT UNRELIABLE the highlight emanates from the node it is connected to.*/
	color: var(--cddbWhite);
}
.assocArgContainer{
	flex-grow: 1;
    display: table;
}
.acceptRate{
	display: block;
}
.assertLink{
	display: table-cell;
    padding-left: 2.5rem;
    vertical-align: middle;
}
.bumpButton{
	display: block;
}
.pendingWeight{
	display: block;
}
.bump {
	float: left;
	margin: 0;
	height:100%;
	width:100%;
	color: var(--cddbRed);
	font-weight: bold;
	text-align: center;
	border-width: 2;
	border-style: solid;
	border-radius: 50%;
}
a:link{
	color: inherit;
	text-decoration: none;
}
a:visited {
	color: inherit;
	text-decoration: none;
}
a:hover{
	color: inherit;
}  
a:active {
	color: inherit;
}
/*Fonty stuff like what I'd normally do inline as a span that I'm trying to break the habit of using*/
affirm {
	color: var(--cddbGreen); 
	font-size: 1.5rem;
}
negate {
	color: var(--cddbRed); 
	font-size: 1.5rem;
}

/*Apply palette coloring*/
.primaryColor {
	color: var(--cddbWhite);
    background-color:var(--cddbBlack);
    border-color: var(--cddbWhite);
}
.primaryInvert {
	color: var(--cddbBlack);
    background-color: var(--cddbWhite);
}
.becauseColor {
	color: var(--cddbWhite);
    background-color:var(--cddbBlue);
}
.becauseInvert {
	color: var(--cddbBlue);
    background-color: var(--cddbWhite);
}
.becauseContent {
	color: var(--cddbBlack);
    background-color: var(--cddbWhite);
    border-color: var(--cddbBlue);
}
.thereforeColor {
	color: var(--cddbWhite);
    background-color:var(--cddbGreen);
}
.thereforeInvert {
	color: var(--cddbGreen);
    background-color: var(--cddbWhite);
}
.thereforeContent {
	color: var(--cddbBlack);
    background-color: var(--cddbWhite);
    border-color: var(--cddbGreen);
}
.rebuttalColor {
	color: var(--cddbWhite);
    background-color:var(--cddbRed);
}
.rebuttalInvert {
	color: var(--cddbRed);
    background-color: var(--cddbWhite);
}
.rebuttalContent {
	color: var(--cddbBlack);
    background-color: var(--cddbWhite);
    border-color: var(--cddbRed);
}
.neutralColor {
	color: var(--cddbWhite);
    background-color:var(--cddbGrey);
}
.neutralInvert {
	color: var(--cddbGrey);
    background-color: var(--cddbWhite);
}
.neutralContent {
	color: var(--cddbBlack);
    background-color: var(--cddbWhite);
    border-color: var(--cddbGrey);
}
#becauseItems {
	display: flex;
	height: 100%;
	width: 100%;
	margin: 0;
	padding: 0;
	border: 0;
}
#thereforeItems {
	display: flex;
	height: 100%;
	width: 100%;
	margin: 0;
	padding: 0;
	border: 0;
}#rebuttalItems {
	display: flex;
	height: 100%;
	width: 100%;
	margin: 0;
	padding: 0;
	border: 0;
}
.genContain {
	border: 4px solid red;
	margin: .5rem;
	padding: .5rem;
}